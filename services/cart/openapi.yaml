openapi: 3.0.0
info:
  title: Cart API
  description: API for managing shopping cart
  version: 1.0.0

paths:
  /api/cart:
    get:
      summary: Retrieve all cart items for a user
      parameters:
        - name: user_id
          in: query
          required: true
          description: The ID of the user whose cart items should be retrieved
          schema:
            type: string
        - name: page
          in: query
          required: false
          description: Page number for pagination (default is 1)
          schema:
            type: integer
            minimum: 1
        - name: limit
          in: query
          required: false
          description: Number of items per page (default is 10)
          schema:
            type: integer
            minimum: 1
        - name: sort_by
          in: query
          required: false
          description: Field to sort by (e.g., price, quantity)
          schema:
            type: string
        - name: order
          in: query
          required: false
          description: Sorting order (asc or desc)
          schema:
            type: string
            enum: [asc, desc]
      responses:
        "200":
          description: Successful response with paginated cart details
          content:
            application/json:
              schema:
                type: object
                properties:
                  user_id:
                    type: string
                  page:
                    type: integer
                  limit:
                    type: integer
                  total:
                    type: integer
                  items:
                    type: array
                    items:
                      type: object
                      properties:
                        productId:
                          type: string
                        quantity:
                          type: integer
                        price:
                          type: number
                  totalAmount:
                    type: number
                  createdAt:
                    type: string
                    format: date-time
        "400":
          description: User ID required or invalid request

    post:
      summary: Add a product to the cart (with user tracking)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: string
                  description: The ID of the user adding the product to the cart
                product_id:
                  type: string
                  description: The ID of the product being added (must be available in `/api/cart/products`)
                quantity:
                  type: integer
                  minimum: 1
                  description: The quantity of the product being added
              required:
                - user_id
                - product_id
                - quantity
      responses:
        "201":
          description: Product added to cart successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  user_id:
                    type: string
                  items:
                    type: array
                    items:
                      type: object
                      properties:
                        productId:
                          type: string
                        quantity:
                          type: integer
                        price:
                          type: number
                  totalAmount:
                    type: number
                  createdAt:
                    type: string
                    format: date-time
        "400":
          description: Invalid request

  /api/cart/products:
    get:
      summary: Retrieve available products for dropdown selection
      responses:
        "200":
          description: Product list for selection
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
                    stock:
                      type: integer

  /api/cart/items:
    get:
      summary: Retrieve available cart items for dropdown selection
      responses:
        "200":
          description: Cart item list for selection
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    product_name:
                      type: string
                    user_id:
                      type: string

  /api/cart/{cart_id}:
    delete:
      summary: Remove an item from the cart using dropdown selection
      parameters:
        - name: cart_id
          in: path
          required: true
          description: The ID of the cart item to remove
          schema:
            type: string
      responses:
        "200":
          description: Item removed successfully
        "404":
          description: Item not found
